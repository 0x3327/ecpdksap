/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IERC5564Announcer,
  IERC5564AnnouncerInterface,
} from "../../interface/IERC5564Announcer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "schemeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stealthAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "ephemeralPubKey",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    name: "Announcement",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "schemeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "stealthAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "ephemeralPubKey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    name: "announce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IERC5564Announcer__factory {
  static readonly abi = _abi;
  static createInterface(): IERC5564AnnouncerInterface {
    return new Interface(_abi) as IERC5564AnnouncerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IERC5564Announcer {
    return new Contract(address, _abi, runner) as unknown as IERC5564Announcer;
  }
}
