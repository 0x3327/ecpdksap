/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IECPDKSAP_MetaAddressRegistry,
  IECPDKSAP_MetaAddressRegistryInterface,
} from "../../interface/IECPDKSAP_MetaAddressRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "id",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "metaAddress",
        type: "bytes",
      },
    ],
    name: "MetaAddressRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_id",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_metaAddress",
        type: "bytes",
      },
    ],
    name: "registerMetaAddress",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_id",
        type: "string",
      },
    ],
    name: "resolve",
    outputs: [
      {
        internalType: "bytes",
        name: "metaAddress",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IECPDKSAP_MetaAddressRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IECPDKSAP_MetaAddressRegistryInterface {
    return new Interface(_abi) as IECPDKSAP_MetaAddressRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IECPDKSAP_MetaAddressRegistry {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IECPDKSAP_MetaAddressRegistry;
  }
}
