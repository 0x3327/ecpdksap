/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ECPDKSAP_MetaAddressRegistry,
  ECPDKSAP_MetaAddressRegistryInterface,
} from "../ECPDKSAP_MetaAddressRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "id",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "metaAddress",
        type: "bytes",
      },
    ],
    name: "MetaAddressRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_id",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_metaAddress",
        type: "bytes",
      },
    ],
    name: "registerMetaAddress",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_id",
        type: "string",
      },
    ],
    name: "resolve",
    outputs: [
      {
        internalType: "bytes",
        name: "metaAddress",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "s_idToMetaAddress",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c89806100206000396000f3fe6080604052600436106100345760003560e01c8063461a4478146100395780638f47e80e14610076578063cfde1166146100b3575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b919061051f565b6100cf565b60405161006d91906105e7565b60405180910390f35b34801561008257600080fd5b5061009d6004803603810190610098919061063f565b610200565b6040516100aa91906105e7565b60405180910390f35b6100cd60048036038101906100c8919061070d565b6102a0565b005b60606000826040516020016100e49190610826565b60405160208183030381529060405280519060200120905060008082815260200190815260200160002080546101199061088a565b80601f01602080910402602001604051908101604052809291908181526020018280546101459061088a565b80156101925780601f1061016757610100808354040283529160200191610192565b820191906000526020600020905b81548152906001019060200180831161017557829003601f168201915b50505050509150600082511415604051806060016040528060258152602001610c2f60259139906101f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f091906108bb565b60405180910390fd5b5050919050565b6000602052806000526040600020600091509050805461021f9061088a565b80601f016020809104026020016040519081016040528092919081815260200182805461024b9061088a565b80156102985780601f1061026d57610100808354040283529160200191610298565b820191906000526020600020905b81548152906001019060200180831161027b57829003601f168201915b505050505081565b6000826040516020016102b39190610826565b604051602081830303815290604052805190602001209050600080600083815260200190815260200160002080546102ea9061088a565b905014604051806060016040528060238152602001610c0c6023913990610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033e91906108bb565b60405180910390fd5b508160008083815260200190815260200160002090816103679190610a93565b50816040516103769190610ba1565b60405180910390208360405161038c9190610bf4565b60405180910390207f5a01101b89c95be569f38e9fb7606a9a278b90b732afa15f27232f70b2c693a360405160405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61042c826103e3565b810181811067ffffffffffffffff8211171561044b5761044a6103f4565b5b80604052505050565b600061045e6103c5565b905061046a8282610423565b919050565b600067ffffffffffffffff82111561048a576104896103f4565b5b610493826103e3565b9050602081019050919050565b82818337600083830152505050565b60006104c26104bd8461046f565b610454565b9050828152602081018484840111156104de576104dd6103de565b5b6104e98482856104a0565b509392505050565b600082601f830112610506576105056103d9565b5b81356105168482602086016104af565b91505092915050565b600060208284031215610535576105346103cf565b5b600082013567ffffffffffffffff811115610553576105526103d4565b5b61055f848285016104f1565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105a2578082015181840152602081019050610587565b60008484015250505050565b60006105b982610568565b6105c38185610573565b93506105d3818560208601610584565b6105dc816103e3565b840191505092915050565b6000602082019050818103600083015261060181846105ae565b905092915050565b6000819050919050565b61061c81610609565b811461062757600080fd5b50565b60008135905061063981610613565b92915050565b600060208284031215610655576106546103cf565b5b60006106638482850161062a565b91505092915050565b600067ffffffffffffffff821115610687576106866103f4565b5b610690826103e3565b9050602081019050919050565b60006106b06106ab8461066c565b610454565b9050828152602081018484840111156106cc576106cb6103de565b5b6106d78482856104a0565b509392505050565b600082601f8301126106f4576106f36103d9565b5b813561070484826020860161069d565b91505092915050565b60008060408385031215610724576107236103cf565b5b600083013567ffffffffffffffff811115610742576107416103d4565b5b61074e858286016104f1565b925050602083013567ffffffffffffffff81111561076f5761076e6103d4565b5b61077b858286016106df565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60006107ac82610785565b6107b68185610790565b93506107c6818560208601610584565b6107cf816103e3565b840191505092915050565b7f737472696e670000000000000000000000000000000000000000000000000000600082015250565b6000610810600683610790565b915061081b826107da565b602082019050919050565b6000604082019050818103600083015261084081846107a1565b9050818103602083015261085381610803565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806108a257607f821691505b6020821081036108b5576108b461085b565b5b50919050565b600060208201905081810360008301526108d581846107a1565b905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261093f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610902565b6109498683610902565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061099061098b61098684610961565b61096b565b610961565b9050919050565b6000819050919050565b6109aa83610975565b6109be6109b682610997565b84845461090f565b825550505050565b600090565b6109d36109c6565b6109de8184846109a1565b505050565b5b81811015610a02576109f76000826109cb565b6001810190506109e4565b5050565b601f821115610a4757610a18816108dd565b610a21846108f2565b81016020851015610a30578190505b610a44610a3c856108f2565b8301826109e3565b50505b505050565b600082821c905092915050565b6000610a6a60001984600802610a4c565b1980831691505092915050565b6000610a838383610a59565b9150826002028217905092915050565b610a9c82610568565b67ffffffffffffffff811115610ab557610ab46103f4565b5b610abf825461088a565b610aca828285610a06565b600060209050601f831160018114610afd5760008415610aeb578287015190505b610af58582610a77565b865550610b5d565b601f198416610b0b866108dd565b60005b82811015610b3357848901518255600182019150602085019450602081019050610b0e565b86831015610b505784890151610b4c601f891682610a59565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b6000610b7b82610568565b610b858185610b65565b9350610b95818560208601610584565b80840191505092915050565b6000610bad8284610b70565b915081905092915050565b600081905092915050565b6000610bce82610785565b610bd88185610bb8565b9350610be8818560208601610584565b80840191505092915050565b6000610c008284610bc3565b91508190509291505056fe4552523a204d65746120494420697320616c72656164792072656769737465726564214552523a204d65746120494420686173206e6f74206265656e207265676973746572656421a2646970667358221220720324b7e592a54200a7eb634ed0d81b34632267c9d64643bb7f430b7d8f512464736f6c63430008180033";

type ECPDKSAP_MetaAddressRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ECPDKSAP_MetaAddressRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ECPDKSAP_MetaAddressRegistry__factory extends ContractFactory {
  constructor(...args: ECPDKSAP_MetaAddressRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ECPDKSAP_MetaAddressRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ECPDKSAP_MetaAddressRegistry__factory {
    return super.connect(runner) as ECPDKSAP_MetaAddressRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ECPDKSAP_MetaAddressRegistryInterface {
    return new Interface(_abi) as ECPDKSAP_MetaAddressRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ECPDKSAP_MetaAddressRegistry {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ECPDKSAP_MetaAddressRegistry;
  }
}
